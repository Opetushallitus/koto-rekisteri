<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>fi.oph</groupId>
    <artifactId>kitu</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>kitu</name>
    <description>Kielitutkintorekisteri</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
        <kotlin.version>2.0.20</kotlin.version>
        <flyway.version>10.18.0</flyway.version>
        <springdoc.version>2.6.0</springdoc.version>

        <local-env.datasource.url>jdbc:postgresql://localhost:5432/kitu-dev</local-env.datasource.url>
        <local-env.datasource.user>kitu</local-env.datasource.user>
        <local-env.datasource.password>kitu</local-env.datasource.password>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-cas</artifactId>
            <version>6.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
            <version>${flyway.version}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>

        <!-- Adds Swagger UI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb.flyway-test-extensions</groupId>
            <artifactId>flyway-spring-test</artifactId>
            <version>10.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <url>${local-env.datasource.url}</url>
                    <user>${local-env.datasource.user}</user>
                    <password>${local-env.datasource.password}</password>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.8.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/static/open-api.yaml</inputSpec>
                            <output>${project.basedir}</output>

                            <generatorName>kotlin-spring</generatorName>
                            <!-- Enabled generators -->
                            <generateModels>true</generateModels>
                            <generateApis>true</generateApis>

                            <!-- Disable generation of everything else -->
                            <skipOperationExample>true</skipOperationExample>
                            <generateSupportingFiles>false</generateSupportingFiles>

                            <!--
                            Enable post-processing of generated sources. This allows e.g. auto-formatting with ktlint.

                            Requires setting KOTLIN_POST_PROCESS_FILE environment variable for any post-processing to
                            be performed. e.g.
                            ```sh
                            KOTLIN_POST_PROCESS_FILE="ktlint -F"
                            ```
                            -->
                            <enablePostProcessFile>true</enablePostProcessFile>

                            <!-- https://openapi-generator.tech/docs/generators/kotlin-spring/#config-options -->
                            <configOptions>
                                <sourceFolder>src/main/kotlin</sourceFolder>
                                <modelPackage>fi.oph.kitu.generated.model</modelPackage>
                                <apiPackage>fi.oph.kitu.generated.api</apiPackage>
                                <gradleBuildFile>false</gradleBuildFile>

                                <!-- Generate Spring Boot 3.x compatible APIs/models -->
                                <library>spring-boot</library>
                                <useSpringBoot3>true</useSpringBoot3>

                                <!-- Don't generate the spring boot application entry-point etc. -->
                                <interfaceOnly>true</interfaceOnly>
                                <exceptionHandler>false</exceptionHandler>
                                <useFeignClientUrl>false</useFeignClientUrl>

                                <!-- Enable Swagger UI -->
                                <useSwaggerUI>true</useSwaggerUI>

                                <!--
                                Don't add documentation annotations. Schema is generated from a provided OpenAPI spec,
                                so the annotations contain only the information from the existing spec. Therefore, docs
                                should be generated directly from the OpenAPI spec, removing any need for the doc
                                annotations.
                                -->
                                <documentationProvider>none</documentationProvider>

                                <!-- Use tags for determining controllers' names etc. -->
                                <useTags>true</useTags>

                                <!-- Disable some boilerplate on generated API interfaces -->
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useBeanValidation>false</useBeanValidation>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <filesets>
                        <!-- Delete generated OpenAPI sources when running `mvn clean` -->
                        <fileset>
                            <directory>${project.basedir}/src/main/kotlin</directory>
                            <includes>
                                **/generated/**/*.kt
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
